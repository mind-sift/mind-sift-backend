service: mind-sift-app
frameworkVersion: '4'

provider:
  name: aws
  runtime: python3.11
  region: us-west-2
  iam:
    role:
      statements:
        # Grant Full Access to Bedrock
        - Effect: "Allow"
          Action:
            - "bedrock:InvokeModel"
            - "bedrock:InvokeModelWithResponseStream"
          Resource:
            - "arn:aws:bedrock:us-west-2::foundation-model/*" # Allow all models in the region
  environment:
    LANGCHAIN_TRACING_V2: "true"
    OPENAI_ORGANIZATION: ${env:OPENAI_ORGANIZATION}
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    LANGCHAIN_API_KEY: ${env:LANGCHAIN_API_KEY}
    LANGCHAIN_PROJECT: ${env:LANGCHAIN_PROJECT}
    ZILLIZ_CLOUD_URI: ${env:ZILLIZ_CLOUD_URI}
    ZILLIZ_CLOUD_USER: ${env:ZILLIZ_CLOUD_USER}
    ZILLIZ_CLOUD_PASSWORD: ${env:ZILLIZ_CLOUD_PASSWORD}
  apiGateway:
    usagePlan:
      quota:
        limit: 1000
        offset: 0
        period: MONTH
      throttle:
        rateLimit: 10
        burstLimit: 2

functions:
  app:
    handler: app.entrypoints.lambda.handler
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY

plugins:
  - serverless-python-requirements
  - serverless-offline


custom:
  pythonRequirements:
    layer: true
    slim: true

package:
  exclude:
    - node_modules/**
    - .git/**
    - tests/**
    - __pycache__/**
    - .venv/**  # Exclude local virtual environment
    - .requirements.zip  # Exclude the ZIP of requirements
    - .mypy_cache/**
    - poetry.lock
    - pyproject.toml
    - Dockerfile
    - README.md
    - package.json
    - package-lock.json
    - .envrc
    - .python-version
  include:
    - ./app/**
